{"version":3,"sources":["components/NavBar.jsx","components/Home.jsx","reducers/additionReducer.jsx","components/Addition.jsx","reducers/deletionReducer.jsx","components/Deletion.jsx","reducers/formReducer.jsx","components/MyForm.jsx","components/MyRouter.jsx","App.js","serviceWorker.js","reducers/index.jsx","index.js"],"names":["NavBar","react_default","a","createElement","Navbar","default","fixedTop","fluid","collapseOnSelect","Header","Brand","href","Toggle","Collapse","Nav","lib","exact","to","NavItem","pullRight","Component","Home","initialState","initialValue","additionAction","type","additionFn","state","Object","objectSpread","Addition","className","Button","onClick","this","props","additionKey","Badge","additionValue","connect","adding","dispatch","bindActionCreators","deleteAction","deleteFn","Deletion","_this","deletionKey","deletionValue","deleting","initalState","firstName","lastName","dropDown","fieldAction","handleChangeAction","e","payload","currentTarget","handleSelectAction","fieldTypeFn","alert","JSON","stringify","handleChangeFn","element","value","name","length","test","handleSelectFn","MyForm","formValue","onChange","handleKey","defaultValue","onBlur","selectKey","fieldKey","validating","MyRouter","Switch","Route","path","component","App","BrowserRouter","Fragment","components_NavBar","components_MyRouter","Boolean","window","location","hostname","match","allReducers","combineReducers","arguments","undefined","action","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f96da14.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nclass NavBar extends Component {\r\n   \r\n    render() {\r\n        return (\r\n            <Navbar default fixedTop fluid collapseOnSelect>\r\n                <Navbar.Header>\r\n                    <Navbar.Brand>\r\n                        <a href=\"#bb\">React-Bootstrap</a>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle />\r\n                </Navbar.Header>\r\n                <Navbar.Collapse>\r\n                    <Nav>\r\n                        <LinkContainer exact to=\"/\">\r\n                            <NavItem>Home</NavItem>\r\n                        </LinkContainer>  \r\n                        <LinkContainer to=\"/addition\">\r\n                            <NavItem>Addition</NavItem>\r\n                        </LinkContainer> \r\n                        <LinkContainer to=\"/deletion\">\r\n                            <NavItem>Deletion</NavItem>\r\n                        </LinkContainer>      \r\n                        <LinkContainer to=\"/form\">\r\n                            <NavItem>Form</NavItem>\r\n                        </LinkContainer>                    \r\n                    </Nav>\r\n                    <Nav pullRight>\r\n                        <LinkContainer to=\"/login\">\r\n                            <NavItem>Login</NavItem>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/signup\">\r\n                            <NavItem>SignUp</NavItem>\r\n                        </LinkContainer>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n   \r\n    render() {\r\n        return (\r\n            <h1>Home</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","const initialState = {    \r\n    initialValue : 10\r\n}\r\n\r\nexport const additionAction = () => {\r\n    return {\r\n        type : \"additionType\"\r\n    }    \r\n}\r\n\r\nexport default (state=initialState, action) => {\r\n    switch(action.type){\r\n        case \"additionType\" : return additionFn(state)\r\n\r\n        default : return state;\r\n\r\n    }\r\n}\r\n\r\nconst additionFn = (state) => {\r\n    return {\r\n        ...state, initialValue : state.initialValue + 1 \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Button, Badge} from 'react-bootstrap';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {additionAction} from '../reducers/additionReducer';\r\n\r\nclass Addition extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"containter\">\r\n            <h1>Addition</h1>\r\n            <Button onClick = {this.props.additionKey}>Addition</Button>\r\n            <Badge>{this.props.additionValue.initialValue}</Badge>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        additionValue : state.adding\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({additionKey : additionAction}, dispatch);\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Addition);","const initialState = {\r\n    initialValue : 50\r\n}\r\n\r\nexport const deleteAction = () => {\r\n    return {\r\n        type : \"deleteAction\"\r\n    }\r\n}\r\n\r\nexport default(state=initialState, action) => {\r\n    switch(action.type){\r\n        case \"deleteAction\" : return deleteFn(state)\r\n\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\nconst deleteFn = (state) => {\r\n    return {\r\n        ...state, initialValue:state.initialValue - 1\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Button, Badge} from 'react-bootstrap';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {deleteAction} from '../reducers/deletionReducer'\r\n\r\nclass Deletion extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"containter\">\r\n            <h1>Deletion</h1>\r\n            <Button onClick={() => {this.props.deletionKey()}}>Deletion</Button>\r\n            <Badge>{this.props.deletionValue.initialValue}</Badge>\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n       deletionValue : state.deleting\r\n    }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) => {\r\n    return bindActionCreators({deletionKey: deleteAction },dispatch)    \r\n}\r\nexport default connect(mapStateToProps, mapDispatchtoProps )(Deletion);","\r\nvar initalState = {\r\n    firstName : \"\",\r\n    lastName : \"\",\r\n    dropDown : \"\"\r\n}\r\n\r\nexport const fieldAction = () => {\r\n    return {\r\n        type : \"fieldType\"\r\n    }\r\n}\r\n\r\nexport const handleChangeAction = (e) => {\r\n    return {\r\n        type : \"handleChangeType\",\r\n        payload : e.currentTarget\r\n    }\r\n}\r\n\r\nexport const handleSelectAction = (e) => {\r\n    return {\r\n        type : \"handleSelectType\",\r\n        payload : e.currentTarget\r\n    }\r\n}\r\n\r\nexport default (state=initalState, action) => {\r\n    switch(action.type) {\r\n        case \"fieldType\" :  return fieldTypeFn(state);\r\n        case \"handleChangeType\" : return handleChangeFn(state, action.payload);\r\n        case \"handleSelectType\" : return handleSelectFn(state, action.payload);\r\n        default : return state;\r\n    }\r\n} \r\n\r\nconst fieldTypeFn = (state) => {\r\n    alert (JSON.stringify(state));\r\n    return false;\r\n    \r\n}\r\n\r\nconst handleChangeFn = (state, element) => {\r\n    let value = element.value;\r\n    if(element.name === \"firstName\"){\r\n        if(value.length > 15 || value.length === 0 ) {\r\n            alert('Please enter more than 15 chars');\r\n        }\r\n        return{\r\n            ...state, firstName: value\r\n        }\r\n    }\r\n    else if(element.name === \"lastName\"){\r\n        if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n            alert('Please enter more than 15 chars');\r\n            return{\r\n                ...state, lastName: \"\"\r\n            }\r\n        }\r\n        return{\r\n            ...state, lastName: value\r\n        }\r\n    }    \r\n}\r\n\r\nconst handleSelectFn = (state, element) => {\r\n    let value = element.value;\r\n    if(value=== \"0\") {\r\n        alert('Please select option');\r\n    }\r\n    return {\r\n        ...state, dropDown: value\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {fieldAction, handleChangeAction, handleSelectAction } from '../reducers/formReducer';\r\n\r\nclass MyForm extends Component {   \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n            <h1>My Form</h1>\r\n            <form>\r\n                <label>First Name</label>\r\n                <br />\r\n                <input type=\"text\" value = {this.props.formValue.firstName} name=\"firstName\" onChange={ this.props.handleKey}   />\r\n                <br />\r\n                <label>Last Name</label>\r\n                <br />\r\n                <input type=\"text\"  defaultValue = {this.props.formValue.lastName} name=\"lastName\" onBlur={this.props.handleKey} />\r\n                <br />\r\n                <br />\r\n                <select onChange= {this.props.selectKey}>\r\n                    <option value=\"0\">Select Option</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                </select>\r\n                <br /> <br />\r\n                <input type=\"submit\" onClick = {this.props.fieldKey} />\r\n            </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n            formValue : state.validating\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        fieldKey: fieldAction,\r\n        handleKey : handleChangeAction,\r\n        selectKey : handleSelectAction\r\n    },dispatch);\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyForm);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from '../components/Home';\r\nimport Addition from '../components/Addition';\r\nimport Deletion from '../components/Deletion';\r\nimport MyForm from '../components/MyForm';\r\n\r\nclass MyRouter extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container body-content\">\r\n        <br />\r\n        <br />\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route path='/addition' component={Addition} />\r\n          <Route path='/deletion' component={Deletion} />\r\n          <Route path='/form' component={MyForm} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyRouter;","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport MyRouter from './components/MyRouter';\n\n\nclass App extends Component {\n  render() {\n    return (\n      \n      <Router>\n        <React.Fragment>\n        <NavBar />\n        <MyRouter />\n        </React.Fragment>\n      </Router>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\r\nimport additionReducer from './additionReducer';\r\nimport deletionReducer from './deletionReducer';\r\nimport formReducer from './formReducer';\r\n\r\nconst allReducers = combineReducers({\r\n    adding : additionReducer,\r\n    deleting : deletionReducer,\r\n    validating : formReducer\r\n\r\n});\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport allReducers from './reducers/index'\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter></Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}